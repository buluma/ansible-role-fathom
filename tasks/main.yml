---

- name: update apt cache.
  ansible.builtin.apt: update_cache=true cache_valid_time=600
  when: ansible_os_family == 'Debian'
  changed_when: false

# TODO: test bootstrap install
- name: ensure unzip is installed.
  ansible.builtin.package: name=unzip state=present

- name: ensure SQLite is installed (Red Hat).
  ansible.builtin.package: name=sqlite state=present
  when: ansible_os_family == 'RedHat'

- name: ensure SQLite is installed (Debian).
  ansible.builtin.package: name=sqlite3 state=present
  when: ansible_os_family == 'Debian'

- include_tasks: install.yml

- name: create Fathom directory.
  ansible.builtin.file:
    path: "{{ fathom_directory }}"
    state: directory
    mode: 0755

- name: copy Fathom config into place.
  ansible.builtin.template:
    src: fathom-config.j2
    dest: "{{ fathom_directory }}/.env"
    mode: 0644
  notify: restart fathom

- name: copy Fathom systemd unit file into place (for systemd systems).
  ansible.builtin.template:
    src: fathom.unit.j2
    dest: /etc/systemd/system/fathom.service
    owner: root
    group: root
    mode: 0755
  notify: restart fathom
  when: "ansible_service_mgr == 'systemd'"

- name: ensure Fathom service is in the correct state.
  ansible.builtin.service:
    name: fathom
    state: "{{ fathom_service_state }}"
    enabled: "{{ fathom_service_enabled }}"
  when: fathom_manage_service
